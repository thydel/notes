#!/usr/bin/make -f

MAKEFLAGS += -Rr
MAKEFLAGS += --warn-undefined-variables
SHELL := $(shell which bash)
.SHELLFLAGS := -euo pipefail -c

.ONESHELL:
.DELETE_ON_ERROR:
.PHONY: phony

.RECIPEPREFIX :=
.RECIPEPREFIX +=

.DEFAULT_GOAL := main

-: min := 4.1
-: msg := make $(MAKE_VERSION) < $(min)
-: - := $(and $(or $(filter $(min),$(firstword $(sort $(MAKE_VERSION) $(min)))),$(error $(msg))),)

-: ~ != git rev-parse --is-inside-work-tree > /dev/null 2>&1 && date
-: - := $(and $(or $~,$(error not in a git dir)),)

. != git rev-parse --show-toplevel
VPATH := $.

eq.l = $(and $(findstring $(strip $1),$(strip $2)),$(findstring $(strip $2),$(strip $1)))
cdr.l = $(filter-out $(firstword $1), $1)
map.l = $(eval λ = $(subst €,$$,$1))$(foreach _,$2,$(call λ,$_))

md != cd $.; find spl -type f -name '*.md'

~ =
~ += $(eval name := $(basename $(notdir $1)).json)
~ += $(eval $(name) := $1)
~ += $(eval json.s += $(name))
$(call map.l, €(call ~, €1), $(md))

.SECONDEXPANSION:

lib.d := lib
json.d := spl/json

json.p := $(json.s:%=$(json.d)/%)

~ := $(json.d)/%.json
$~: md = $(subst $./,,$<)
$~: json = $@
$~: file = $(notdir $<)
$~: base = $(basename $(file))
$~: id = $(subst _,:,$(base))
$~: jq = . + { file: "$(md)", id: "$(id)" }
$~: cmd = pandoc $(md) --template $(lib.d)/meta.json | jq '$(jq)' > $(json)
$~: $$($$(@F)); (cd $.; $(cmd))
jsons: $(json.p)

tmp.t := spl/tmp

json.f := $(tmp.t)/all.json
$(json.f): sort := jq -s 'sort_by(.date)|reverse|.[]'
$(json.f): $(tmp.t)/.stone $(json.p); cd $.; cat $(call cdr.l, $^) | $(sort) > $@
json: phony $(json.f)

main: phony;

%/.stone:; cd $.; mkdir -p $(@D); touch $@
.PRECIOUS: %/.stone

# Local Variables:
# indent-tabs-mode: nil
# End:
